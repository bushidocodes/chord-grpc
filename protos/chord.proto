
syntax = "proto3";
package chord;

import "google/protobuf/empty.proto";

service Node {
  // Chord Library Level RPC Calls
  rpc getNodeIdRemoteHelper (NodeAddress) returns (NodeAddress) {}
  rpc findSuccessorRemoteHelper (RemoteId) returns (NodeAddress) {}
  rpc getSuccessorRemoteHelper (NodeAddress) returns (NodeAddress) {}
  rpc setSuccessor (NodeAddress) returns (google.protobuf.Empty) {}
  rpc getPredecessor (NodeAddress) returns (NodeAddress) {}
  rpc setPredecessor (NodeAddress) returns (google.protobuf.Empty) {}
  rpc getFingerTableEntries (NodeAddress) returns (stream FingerTableEntry) {}
  rpc closestPrecedingFingerRemoteHelper (RemoteId) returns (NodeAddress) {}
  rpc notify (NodeAddress) returns (google.protobuf.Empty) {}
  rpc updateFingerTable (FingerTableEntry) returns (NodeAddress) {}

  // Application Level RPC Calls
  rpc summary(Trash) returns (NodeAddress) {}
  rpc fetch (UserId) returns (User) {}
  rpc insert (UserEdit) returns (google.protobuf.Empty) {}
  rpc insertUserRemoteHelper (UserEdit) returns (google.protobuf.Empty) {}
  rpc lookup (UserId) returns (User) {}
  rpc lookupUserRemoteHelper (UserId) returns (User) {}
  rpc remove(UserId) returns (google.protobuf.Empty){}
  rpc removeUserRemoteHelper(UserId) returns (google.protobuf.Empty){}
  rpc migrateUsersToPredecessorRemoteHelper(google.protobuf.Empty) returns (google.protobuf.Empty){}
  rpc getUserIds (NodeAddress) returns (stream UserId) {}
}

message NodeAddress {
  uint32 id = 1;
  string host = 2;
  uint32 port = 3;
}

message RemoteId {
  uint32 id = 1;
  NodeAddress node = 2;
}

message FingerTableEntry {
  NodeAddress node = 1;
  uint32 index = 2;
 }

message Trash{
  uint32 id = 1;
}

message UserId {
  uint32 id = 1;
}

message User {
  int32 id = 1;
  int32 reputation = 2;
  string creationDate = 3;
  string displayName = 4;
  string lastAccessDate = 5;
  string websiteUrl = 6;
  string location = 7;
  string aboutMe = 8;
  int32 views = 9;
  int32 upVotes = 10;
  int32 downVotes = 11;
  string profileImageUrl = 12;
  int32 accountId = 13;
}

message UserEdit {
  User user = 1;
  bool edit = 2; 
}
