version: "3"
services:
  node0:
    build:
      context: .
      dockerfile: NodeDockerfile
    # image: chordnode
    # container_name: chordnode
    command: npm run devServer -- --host node9 --knownHost node0 --knownPort 1337
  node1:
    build:
      context: .
      dockerfile: NodeDockerfile
    # image: chordnode
    # container_name: chordnode
    command: npm run devServer -- --host node2 --knownHost node0 --knownPort 1337
    depends_on:
      - node0
  node2:
    build:
      context: .
      dockerfile: NodeDockerfile
    # image: chordnode
    # container_name: chordnode
    command: npm run devServer -- --host node0 --knownHost node0 --knownPort 1337
    depends_on:
      - node0
  node3:
    build:
      context: .
      dockerfile: NodeDockerfile
    # image: chordnode
    # container_name: chordnode
    command: npm run devServer -- --host node6 --knownHost node0 --knownPort 1337
    depends_on:
      - node0
  node4:
    build:
      context: .
      dockerfile: NodeDockerfile
    # image: chordnode
    # container_name: chordnode
    command: npm run devServer -- --host node4 --knownHost node0 --knownPort 1337
    depends_on:
      - node0
  node5:
    build:
      context: .
      dockerfile: NodeDockerfile
    # image: chordnode
    # container_name: chordnode
    command: npm run devServer -- --host node3 --knownHost node0 --knownPort 1337
    depends_on:
      - node0
  node6:
    build:
      context: .
      dockerfile: NodeDockerfile
    # image: chordnode
    # container_name: chordnode
    command: npm run devServer -- --host node7 --knownHost node0 --knownPort 1337
    depends_on:
      - node0
  client:
    build:
      context: .
      dockerfile: ClientDockerfile
    # image: chordclient
    # container_name: chordclient
    ports:
      - "1337:1337"
    depends_on:
      - node0
    # volumes:
    #   - .:/home/node/app
    #   - /home/node/app/node_modules/
    command: npm run devClient -- crawl --host node0 --port 1337 --webPort 1337
